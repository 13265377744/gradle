<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="gradle.master.mapper.third.EventsMapper">
  <resultMap id="BaseResultMap" type="gradle.master.entity.third.Events">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="category" jdbcType="VARCHAR" property="category" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="event_data" jdbcType="VARCHAR" property="eventData" />
    <result column="event_date" jdbcType="BIGINT" property="eventDate" />
    <result column="created_at" jdbcType="BIGINT" property="createdAt" />
    <result column="component_uuid" jdbcType="VARCHAR" property="componentUuid" />
    <result column="analysis_uuid" jdbcType="VARCHAR" property="analysisUuid" />
    <result column="uuid" jdbcType="VARCHAR" property="uuid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, category, description, event_data, event_date, created_at, component_uuid, 
    analysis_uuid, uuid
  </sql>
  <select id="selectByExample" parameterType="gradle.master.entity.third.EventsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from events
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from events
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from events
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="gradle.master.entity.third.EventsExample">
    delete from events
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="gradle.master.entity.third.Events">
    insert into events (id, name, category, 
      description, event_data, event_date, 
      created_at, component_uuid, analysis_uuid, 
      uuid)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{category,jdbcType=VARCHAR}, 
      #{description,jdbcType=VARCHAR}, #{eventData,jdbcType=VARCHAR}, #{eventDate,jdbcType=BIGINT}, 
      #{createdAt,jdbcType=BIGINT}, #{componentUuid,jdbcType=VARCHAR}, #{analysisUuid,jdbcType=VARCHAR}, 
      #{uuid,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="gradle.master.entity.third.Events">
    insert into events
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="category != null">
        category,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="eventData != null">
        event_data,
      </if>
      <if test="eventDate != null">
        event_date,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="componentUuid != null">
        component_uuid,
      </if>
      <if test="analysisUuid != null">
        analysis_uuid,
      </if>
      <if test="uuid != null">
        uuid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="category != null">
        #{category,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="eventData != null">
        #{eventData,jdbcType=VARCHAR},
      </if>
      <if test="eventDate != null">
        #{eventDate,jdbcType=BIGINT},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=BIGINT},
      </if>
      <if test="componentUuid != null">
        #{componentUuid,jdbcType=VARCHAR},
      </if>
      <if test="analysisUuid != null">
        #{analysisUuid,jdbcType=VARCHAR},
      </if>
      <if test="uuid != null">
        #{uuid,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="gradle.master.entity.third.EventsExample" resultType="java.lang.Long">
    select count(*) from events
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update events
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.category != null">
        category = #{record.category,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.eventData != null">
        event_data = #{record.eventData,jdbcType=VARCHAR},
      </if>
      <if test="record.eventDate != null">
        event_date = #{record.eventDate,jdbcType=BIGINT},
      </if>
      <if test="record.createdAt != null">
        created_at = #{record.createdAt,jdbcType=BIGINT},
      </if>
      <if test="record.componentUuid != null">
        component_uuid = #{record.componentUuid,jdbcType=VARCHAR},
      </if>
      <if test="record.analysisUuid != null">
        analysis_uuid = #{record.analysisUuid,jdbcType=VARCHAR},
      </if>
      <if test="record.uuid != null">
        uuid = #{record.uuid,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update events
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      category = #{record.category,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      event_data = #{record.eventData,jdbcType=VARCHAR},
      event_date = #{record.eventDate,jdbcType=BIGINT},
      created_at = #{record.createdAt,jdbcType=BIGINT},
      component_uuid = #{record.componentUuid,jdbcType=VARCHAR},
      analysis_uuid = #{record.analysisUuid,jdbcType=VARCHAR},
      uuid = #{record.uuid,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="gradle.master.entity.third.Events">
    update events
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="category != null">
        category = #{category,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="eventData != null">
        event_data = #{eventData,jdbcType=VARCHAR},
      </if>
      <if test="eventDate != null">
        event_date = #{eventDate,jdbcType=BIGINT},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=BIGINT},
      </if>
      <if test="componentUuid != null">
        component_uuid = #{componentUuid,jdbcType=VARCHAR},
      </if>
      <if test="analysisUuid != null">
        analysis_uuid = #{analysisUuid,jdbcType=VARCHAR},
      </if>
      <if test="uuid != null">
        uuid = #{uuid,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="gradle.master.entity.third.Events">
    update events
    set name = #{name,jdbcType=VARCHAR},
      category = #{category,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      event_data = #{eventData,jdbcType=VARCHAR},
      event_date = #{eventDate,jdbcType=BIGINT},
      created_at = #{createdAt,jdbcType=BIGINT},
      component_uuid = #{componentUuid,jdbcType=VARCHAR},
      analysis_uuid = #{analysisUuid,jdbcType=VARCHAR},
      uuid = #{uuid,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>